# this_file: .github/workflows/ci.yml

name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Build JavaScript bundle
      run: npm run build
    
    - name: Run all tests
      run: cargo test --verbose
    
    - name: Run integration tests
      run: cargo test --test cli_integration --verbose
    
    - name: Run SVG test suite
      run: cargo test --test svg_test_suite --verbose
    
    - name: Run cross-platform tests (non-Windows)
      if: matrix.os != 'windows-latest'
      run: cargo test --test cross_platform_test --verbose
      
    - name: Run cross-platform tests (Windows)
      if: matrix.os == 'windows-latest'
      run: cargo test --test cross_platform_test --verbose
      env:
        # Windows may need special handling

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: Enforce formatting
      run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: Linting
      run: cargo clippy -- -D warnings

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Build JavaScript bundle
      run: npm run build
    
    - name: Run performance tests
      run: cargo test --test svg_test_suite test_performance_benchmark test_memory_stress test_large_svg_handling -- --nocapture

  build:
    name: Cross-platform Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        target: 
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl 
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        exclude:
          - os: ubuntu-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Build JavaScript bundle
      run: npm run build
    
    - name: Install musl tools (Linux)
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt-get update && sudo apt-get install -y musl-tools
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: svgoo-${{ matrix.target }}
        path: |
          target/${{ matrix.target }}/release/svgoo*
          !target/${{ matrix.target }}/release/*.d